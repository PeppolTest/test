{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the Peppol Documentation page</p> <ul> <li> <p> Quickstart</p> <p>Get started in minutes.  Read quickstart</p> </li> </ul>"},{"location":"backup/","title":"Database Backup \u2013 Schema <code>aston</code>","text":"<p>This file contains the full MySQL Workbench forward engineering script for the <code>aston</code> schema. It can be used to recreate the database structure when needed.</p>"},{"location":"backup/#full-sql-script","title":"Full SQL Script","text":"<pre><code>-- MySQL Workbench Forward Engineering\n\nSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';\n\n-- -----------------------------------------------------\n-- Schema mydb\n-- -----------------------------------------------------\n-- -----------------------------------------------------\n-- Schema aston\n-- -----------------------------------------------------\n\n-- -----------------------------------------------------\n-- Schema aston\n-- -----------------------------------------------------\nCREATE SCHEMA IF NOT EXISTS `aston` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;\nUSE `aston` ;\n\n-- -----------------------------------------------------\n-- Table `aston`.`t_event`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `aston`.`t_event` (\n  `pk_event` INT NOT NULL AUTO_INCREMENT,\n  `description` VARCHAR(200) NULL DEFAULT NULL,\n  `event_name` VARCHAR(45) NOT NULL,\n  `event_date` DATETIME NOT NULL,\n  PRIMARY KEY (`pk_event`))\nENGINE = InnoDB\nDEFAULT CHARACTER SET = utf8mb4\nCOLLATE = utf8mb4_0900_ai_ci;\n\n\n-- -----------------------------------------------------\n-- Table `aston`.`t_location`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `aston`.`t_location` (\n  `pk_location` INT NOT NULL AUTO_INCREMENT,\n  `zip_code` VARCHAR(45) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,\n  `location` TEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,\n  `country` TEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,\n  `main_municipality` TEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,\n  `province` TEXT CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_0900_ai_ci' NULL DEFAULT NULL,\n  PRIMARY KEY (`pk_location`))\nENGINE = InnoDB\nAUTO_INCREMENT = 2765\nDEFAULT CHARACTER SET = latin1;\n\n\n-- -----------------------------------------------------\n-- Table `aston`.`t_value_type`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `aston`.`t_value_type` (\n  `pk_value_type` INT NOT NULL,\n  `description` VARCHAR(100) NOT NULL,\n  PRIMARY KEY (`pk_value_type`),\n  UNIQUE INDEX `description_UNIQUE` (`description` ASC) VISIBLE)\nENGINE = InnoDB\nDEFAULT CHARACTER SET = utf8mb4\nCOLLATE = utf8mb4_0900_ai_ci;\n\n\n-- -----------------------------------------------------\n-- Table `aston`.`t_purchases`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `aston`.`t_purchases` (\n  `pk_invoice_in` INT NOT NULL,\n  `fk_supplier_id` INT NOT NULL,\n  `value` FLOAT NOT NULL,\n  `description` VARCHAR(100) NULL DEFAULT NULL,\n  `vat` FLOAT NULL DEFAULT NULL,\n  `fk_value_type` INT NOT NULL,\n  PRIMARY KEY (`pk_invoice_in`),\n  INDEX `fk_value_type_idx` (`fk_value_type` ASC) VISIBLE,\n  CONSTRAINT `fk_value_type`\n    FOREIGN KEY (`fk_value_type`)\n    REFERENCES `aston`.`t_value_type` (`pk_value_type`))\nENGINE = InnoDB\nDEFAULT CHARACTER SET = utf8mb4\nCOLLATE = utf8mb4_0900_ai_ci;\n\n\n-- -----------------------------------------------------\n-- Table `aston`.`t_sales`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `aston`.`t_sales` (\n  `pk_invoice_out` INT NOT NULL AUTO_INCREMENT,\n  `fk_customer_id` INT NULL DEFAULT NULL,\n  `fk_vat_type` INT NULL DEFAULT NULL,\n  `vat_amount` FLOAT NULL DEFAULT NULL,\n  `fk_sales_type` INT NULL DEFAULT NULL,\n  `sales_amount` FLOAT NULL DEFAULT NULL,\n  `sales_description` LONGTEXT NULL DEFAULT NULL,\n  PRIMARY KEY (`pk_invoice_out`))\nENGINE = InnoDB\nDEFAULT CHARACTER SET = utf8mb4\nCOLLATE = utf8mb4_0900_ai_ci;\n\n\n-- -----------------------------------------------------\n-- Table `aston`.`t_sales_category`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `aston`.`t_sales_category` (\n  `pk_sales` INT NOT NULL AUTO_INCREMENT,\n  `sales_description` LONGTEXT NULL DEFAULT NULL,\n  PRIMARY KEY (`pk_sales`))\nENGINE = InnoDB\nDEFAULT CHARACTER SET = utf8mb4\nCOLLATE = utf8mb4_0900_ai_ci;\n\n\n-- -----------------------------------------------------\n-- Table `aston`.`t_vat`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `aston`.`t_vat` (\n  `pk_vat` INT NOT NULL AUTO_INCREMENT,\n  `value` INT NOT NULL,\n  `description` VARCHAR(45) NULL DEFAULT NULL,\n  PRIMARY KEY (`pk_vat`))\nENGINE = InnoDB\nDEFAULT CHARACTER SET = utf8mb4\nCOLLATE = utf8mb4_0900_ai_ci;\n\n\nSET SQL_MODE=@OLD_SQL_MODE;\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\n</code></pre>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Welcome to the Getting Started guide for our accounting application. This section will help you set up the environment, configure the database, and prepare everything needed to start using the application.</p>"},{"location":"getting-started/#quick-links","title":"Quick Links","text":"<ul> <li> <p> MySQL Setup</p> <p>Prepare the database and tables.  Go to MySQL Setup</p> </li> <li> <p> Remote Connection</p> <p>Connect to the database remotely for your environment.  Go to Remote Connection</p> </li> <li> <p> Database Structure</p> <p>Visualize table relations and UML diagrams for understanding the system.  Go to Database Structure</p> </li> </ul> <p>Tip: Start with MySQL setup before configuring remote connections or reviewing the database structure.</p>"},{"location":"getting-started/database-structure/","title":"Database Structure","text":""},{"location":"getting-started/mysql-setup/","title":"MySQL Setup","text":"<p>This guide explains how to install MySQL on macOS and how to start up a MySQL instance. It is tailored for Apple Silicon (M1/M2) but works similarly on Intel-based Macs.</p>"},{"location":"getting-started/mysql-setup/#1-install-homebrew","title":"1. Install Homebrew","text":"<p>Homebrew is a package manager for macOS and Linux. We\u2019ll use it to install MySQL.</p> <p><pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre> after the installation, add Homebrew to your <code>PATH</code>:</p> <p><pre><code>(echo; echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"') &gt;&gt; ~/.zprofile\neval \"$(/opt/homebrew/bin/brew shellenv)\"\n</code></pre> You can then check if Homebrew is installed correctly: <pre><code>brew help\n</code></pre></p>"},{"location":"getting-started/mysql-setup/#2-install-mysql-via-homebrew","title":"2. Install MySQL via Homebrew","text":"<p>MySQL instalation tutorial</p> <p>Run: <pre><code>brew install mysql\n</code></pre> Which does the following things:</p> <ol> <li>MySQL is installed in the Brew directory, e.g.: <code>/opt/homebrew/Cellar/mysql/8.0.33_3/bin/mysql</code></li> <li>By default, MySQL does not set a root password.</li> </ol> <p>To then secure it: <pre><code>mysql_secure_installation\n</code></pre></p> <p>After the installation, there are two ways to run MySQL:</p>"},{"location":"getting-started/mysql-setup/#option-a-run-as-background-service-recommended","title":"Option A: run as background service (recommended)","text":"<ul> <li> <p>This starts MySQL automatically and restarts it after reboot: <pre><code>brew services start mysql\n</code></pre></p> </li> <li> <p>To stop it: <pre><code>brew services stop mysql\n</code></pre></p> </li> <li> <p>To restart it: <pre><code>brew services restart mysql\n</code></pre></p> </li> </ul>"},{"location":"getting-started/mysql-setup/#option-b-run-manually-foreground-mode","title":"Option B: run manually (foreground mode)","text":"<p>If you don\u2019t need MySQL running in the background: <pre><code>/opt/homebrew/opt/mysql/bin/mysqld_safe --datadir=/opt/homebrew/var/mysql\n</code></pre> This keeps MySQL running only until you close the terminal.</p> <p>Keypoints</p> <ul> <li>MySQL has been installed at <code>/opt/homebrew/Cellar/mysql/&lt;version&gt;</code>. (You normally don\u2019t use this path directly \u2014 Homebrew symlinks binaries into <code>/opt/homebrew/bin</code>.)  </li> <li><code>brew cleanup</code>: Homebrew automatically removes old MySQL versions to save space. If you want to keep older versions, set: <pre><code>export HOMEBREW_NO_INSTALL_CLEANUP=1\n</code></pre></li> <li>Hints (<code>HOMEBREW_NO_ENV_HINTS</code>): Homebrew sometimes shows extra help messages. If you want to hide them, set: <pre><code>export HOMEBREW_NO_ENV_HINTS=1\n</code></pre></li> </ul>"},{"location":"getting-started/mysql-setup/#code-blocks-in-content-tabs","title":"Code Blocks in Content Tabs","text":"PythonJavaScript <pre><code>def main():\n    print(\"Hello world!\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <pre><code>function main() {\n    console.log(\"Hello world!\");\n}\n\nmain();\n</code></pre> code-examples.md<pre><code>// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n</code></pre>"},{"location":"getting-started/remote-connection/","title":"Remote Connection","text":"<p>test</p>"}]}